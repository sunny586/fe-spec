import{_ as e,c as r,a2 as a,o as n}from"./chunks/framework.D1PR7iD3.js";const p=JSON.parse('{"title":"","description":"","frontmatter":{"layout":"home","hero":{"name":"sunny586-fe","text":"","tagline":"前端编码规范工程化","actions":[{"theme":"brand","text":"立刻进入 →","link":"/coding/html"}]},"features":[{"title":"全面的前端生态","details":"支持前端全部生态，无需关注环境，支持直接使用"},{"title":"完善的规范配件","details":"支持对全部前端配置实现一键接入、一键扫描、一键修复、一键升级"},{"title":"完整的测试用例","details":"配套完整的测试用例，帮助您提升项目健壮性"}]},"headers":[],"relativePath":"index.md","filePath":"index.md","lastUpdated":1726125697000}'),o={name:"index.md"};function i(d,t,l,s,c,f){return n(),r("div",null,t[0]||(t[0]=[a('<h2 id="设计目的" tabindex="-1">⭐ 设计目的 <a class="header-anchor" href="#设计目的" aria-label="Permalink to &quot;:star: 设计目的&quot;">​</a></h2><p>随着前端技术的发展，前端项目正在变得越来越复杂。<code>JavaScript</code> 作为一门弱类型解释性编程语言，其灵活多变的语法极大的提高了前端开发效率，但同时也存在一系列问题。在大型项目开发过程中，代码维护所占的时间比重往往大于新功能的开发。因此编写符合团队编码规范的代码是至关重要的。 一致性的代码规范可以增强团队开发协作效率、提高代码质量、减少遗留系统维护的负担。但是每个人的代码编写喜好不同，代码风格也会迥然不同，若要一个团队内所有的成员都能发挥最大程度的价值，一个具有普适性的标准是必不可少的。</p><p>那么，如何制定前端团队的代码规范，如何在团队内进行最小成本的推广，就是一个合格的前端架构师面临的一大难题。很多团队的基础建设都只是简单地知晓其中一部分规范工具的使用，但却没有一套完整的工程化产出来助力研发同学实现规范落地。因此，如果我们能够产出一套完整化的前端编码规范工具，都会对不仅能够解决存量项目的编码异味，还能够保证后续所有项目的编码质量。</p><h2 id="配套工具" tabindex="-1">🛋️ 配套工具 <a class="header-anchor" href="#配套工具" aria-label="Permalink to &quot;:couch_and_lamp: 配套工具&quot;">​</a></h2><p>我们引入了多个业界流行的 <code>Linter</code> 作为规约文档的配套工具，并根据规约内容定制了对应的规则包，它们包括：</p><table tabindex="0"><thead><tr><th>规约</th><th>Lint 工具</th><th>npm 包</th></tr></thead><tbody><tr><td>JavaScript 编码规范 <br> TypeScript 编码规范 <br> Node 编码规范</td><td><a href="https://eslint.org/" target="_blank" rel="noreferrer">ESLint</a></td><td><a href="https://www.npmjs.com/package/sunny586-fe-eslint-config" target="_blank" rel="noreferrer">sunny586-fe-eslint-config</a></td></tr><tr><td>CSS 编码规范</td><td><a href="https://stylelint.io/" target="_blank" rel="noreferrer">stylelint</a></td><td><a href="https://www.npmjs.com/package/sunny586-fe-stylelint-config" target="_blank" rel="noreferrer">sunny586-fe-stylelint-config</a></td></tr><tr><td>Git 规范</td><td><a href="https://commitlint.js.org/#/" target="_blank" rel="noreferrer">commitlint</a></td><td><a href="https://www.npmjs.com/package/sunny586-fe-commitlint-config" target="_blank" rel="noreferrer">sunny586-fe-commitlint-config</a></td></tr><tr><td>文档规范</td><td><a href="https://github.com/DavidAnson/markdownlint" target="_blank" rel="noreferrer">markdownlint</a></td><td><a href="https://www.npmjs.com/package/sunny586-fe-markdownlint-config" target="_blank" rel="noreferrer">sunny586-fe-markdownlint-config</a></td></tr></tbody></table>',6)]))}const m=e(o,[["render",i]]);export{p as __pageData,m as default};
